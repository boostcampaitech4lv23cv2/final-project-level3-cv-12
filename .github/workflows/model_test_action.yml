# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: model test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      working-directory: "back-test/fastapi"
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        sudo apt-get install curl
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=~/.local/bin:$PATH
        poetry install
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: build test
      shell: bash
      working-directory: "back-test/fastapi"
      run: |
        nohup python3 -m app > fastapi.out &
        nohup python3 -m streamlit run app/frontend.py --server.port 8501 > streamlit.out &
    - name: inference and save result with elapsed time
      working-directory: "back-test/fastapi"
      run: |
        pytest test/test.py
    - name: 테스트 결과를 PR에 코멘트로 등록합니다
      uses: thollander/actions-comment-pull-request@v2.3.1
      with:
        filePath: back-test/fastapi/result.jpg
    - name: 테스트 결과를 PR에 코멘트로 등록합니다
      uses: thollander/actions-comment-pull-request@v2.3.1
      with:
        filePath: back-test/fastapi/elapsed_time.json
        
        